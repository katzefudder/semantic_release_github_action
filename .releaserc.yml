branches: ['main']
ci: true
debug: false
dryRun: false
tagFormat: '${version}'

# Global plugin options (will be passed to all plugins)
preset: 'conventionalcommits'
gitlabUrl: 'https://gitlab.kumpel.cloud' # your gitlab url
#slackWebhook: 'https://hooks.slack.com/services/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'
packageName: 'semantic_release_github_action'

plugins:
  - "@semantic-release/commit-analyzer"
  - "@semantic-release/release-notes-generator"
  - "@semantic-release/changelog"
  - '@semantic-release/exec'
  - "@semantic-release/git"
  - "@semantic-release/github"

# Responsible for verifying conditions necessary to proceed with the release:
# configuration is correct, authentication token are valid, etc...
verifyConditions:
  - '@semantic-release/changelog'
  - '@semantic-release/git'
  - '@semantic-release/github'

# Responsible for determining the type of the next release (major, minor or patch).
# If multiple plugins with a analyzeCommits step are defined, the release type will be
# the highest one among plugins output.
# Look details at: https://github.com/semantic-release/commit-analyzer#configuration
analyzeCommits:
  - path: "@semantic-release/commit-analyzer"
    releaseRules:
    - type: "feat"
      release: "patch"
    - type: "minor"
      release: "minor"
    - type: "major"
      release: "major"

# Responsible for generating the content of the release note.
# If multiple plugins with a generateNotes step are defined,
# the release notes will be the result of the concatenation of each plugin output.
generateNotes:
  - path: '@semantic-release/release-notes-generator'
    writerOpts:
      groupBy: 'type'
      commitGroupsSort: 'title'
      commitsSort: 'header'
    linkCompare: true
    linkReferences: true

# Responsible for preparing the release, for example creating or updating files
# such as package.json, CHANGELOG.md, documentation or compiled assets
# and pushing a commit.
prepare:
  - path: '@semantic-release/exec'
    prepareCmd: 'echo "version=\"${nextRelease.version}\"" > .version'
  - path: '@semantic-release/changelog'
  - path: '@semantic-release/git'
    message: 'RELEASE: ${nextRelease.version}'
    assets: ['CHANGELOG.md', '.version']

# Responsible for publishing the release.
publish:
  - path: '@semantic-release/github'
